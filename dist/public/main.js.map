{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/array.pipe.ts","webpack:///./src/app/models/index.ts","webpack:///./src/app/models/movies.ts","webpack:///./src/app/models/review.ts","webpack:///./src/app/movies/index.ts","webpack:///./src/app/movies/movie/movie.component.css","webpack:///./src/app/movies/movie/movie.component.html","webpack:///./src/app/movies/movie/movie.component.ts","webpack:///./src/app/movies/new-movie/new-movie.component.css","webpack:///./src/app/movies/new-movie/new-movie.component.html","webpack:///./src/app/movies/new-movie/new-movie.component.ts","webpack:///./src/app/movies/new-review/new-review.component.css","webpack:///./src/app/movies/new-review/new-review.component.html","webpack:///./src/app/movies/new-review/new-review.component.ts","webpack:///./src/app/movies/refresh/refresh.component.css","webpack:///./src/app/movies/refresh/refresh.component.html","webpack:///./src/app/movies/refresh/refresh.component.ts","webpack:///./src/app/movies/reviews/reviews.component.css","webpack:///./src/app/movies/reviews/reviews.component.html","webpack:///./src/app/movies/reviews/reviews.component.ts","webpack:///./src/app/services/http.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;;;;;;;;;;;;;ACZyC;AACc;AAEhB;AAEvC,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,UAAU,EAAE,QAAQ;QACpB,SAAS,EAAE,MAAM;KAClB;IACD;QACE,IAAI,EAAE,0BAA0B;QAChC,SAAS,EAAE,wDAA2B;KAGvC;IACD;QACE,IAAI,EAAE,QAAQ;QACd,QAAQ,EAAE;YACR;gBACE,IAAI,EAAE,EAAE;gBACR,SAAS,EAAE,sDAAyB;aACrC;YACD;gBACE,IAAI,EAAE,KAAK;gBACX,SAAS,EAAE,yDAA4B;aACxC;YACD;gBACE,IAAI,EAAE,WAAW;gBACjB,SAAS,EAAE,wDAA2B;aACvC;YACD;gBACE,IAAI,EAAE,kBAAkB;gBACxB,SAAS,EAAE,0DAA6B;aACzC;SACF;KACF;CACF,CAAC;AAMF;IAAA;IAAgC,CAAC;IAApB,gBAAgB;QAJ5B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,EAAE,EAAC,mBAAmB,EAAE,QAAQ,EAAC,CAAC,CAAC;YACxE,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,gBAAgB,CAAI;IAAD,uBAAC;CAAA;AAAJ;;;;;;;;;;;;AC5C7B,+DAA+D,+H;;;;;;;;;;;ACA/D,mG;;;;;;;;;;;;;;;;;;;;;ACA0C;AAO1C;IALA;QAME,UAAK,GAAG,UAAU,CAAC;IACrB,CAAC;IAFY,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPiC;AACjB;AACe;AACU;AAEV;AACT;AAER;AACE;AAC6B;AAmBtE;IAAA;IAAyB,CAAC;IAAb,SAAS;QAjBrB,8DAAQ,CAAC;YACR,YAAY;gBACV,2DAAY;qBACT,kDAAqB;gBACxB,qDAAS;gBACT,kFAAgB;cACjB;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,oEAAgB;gBAChB,qEAAgB;gBAChB,0DAAW;gBACX,kEAAmB;aACpB;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;AC7B8B;AAKpD;IAAA;IAMA,CAAC;IAJC,6BAAS,GAAT,UAAU,KAAK,EAAE,IAAkB;QAAlB,kCAAkB;QACjC,OAAO,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,aAAG,IAAI,aAAM,CAAC,MAAM,CAAC,EAAE,GAAG,OAAE,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,EAAlC,CAAkC,CAAC,CAAC;IAC3E,CAAC;IAJU,SAAS;QAHrB,0DAAI,CAAC;YACJ,IAAI,EAAE,WAAW;SAClB,CAAC;OACW,SAAS,CAMrB;IAAD,gBAAC;CAAA;AANqB;;;;;;;;;;;;;ACLtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyB;AACA;;;;;;;;;;;;;ACDzB;AAAA;AAAA;IAAA;IAMA,CAAC;IAAD,YAAC;AAAD,CAAC;;;;;;;;;;;;;;ACND;AAAA;AAAA;IAAA;IAKA,CAAC;IAAD,aAAC;AAAD,CAAC;;;;;;;;;;;;;;ACLD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyD;AACM;AACK;AACG;AACR;AAExD,IAAM,UAAU,GAAU;IAC/B,qEAAc;IACd,2EAAgB;IAChB,gFAAiB;IACjB,mFAAkB;IAClB,2EAAgB;CACjB,CAAC;AAEsC;AACQ;AACE;AACN;AACA;;;;;;;;;;;;AClB5C,wBAAwB,4BAA4B,uBAAuB,KAAK,mDAAmD,+W;;;;;;;;;;;ACAnI,kXAAkX,kCAAkC,eAAe,uBAAuB,2BAA2B,QAAQ,oZ;;;;;;;;;;;;;;;;;;;;;;;;;;ACApa;AACA;AAGC;AAO1D;IAKE,wBACmB,WAAwB,EACxB,MAAc,EACd,KAAqB;QAFrB,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QACd,UAAK,GAAL,KAAK,CAAgB;QAPxC,WAAM,GAAY,EAAE,CAAC;QACrB,SAAI,GAAG,EAAE,CAAC;QACV,QAAG,GAAG,EAAE,CAAC;IAQT,CAAC;IAED,iCAAQ,GAAR;QAAA,iBAuDC;QAtDC,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC,SAAS,CAAC,gBAAM;YAC3C,OAAO,CAAC,GAAG,CAAC,wBAAwB,EAAE,MAAM,CAAC,CAAC;YAC9C,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC;YACrB,KAAc,UAAM,EAAN,iBAAM,EAAN,oBAAM,EAAN,IAAM,EAAE;gBAAjB,IAAI,CAAC;gBACR,IAAI,IAAI,GAAG,EAAE,CAAC;gBACd,KAAc,UAAS,EAAT,MAAC,CAAC,OAAO,EAAT,cAAS,EAAT,IAAS,EAAE;oBAApB,IAAI,CAAC;oBACR,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC;oBACrC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;iBACnB;gBACD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;gBAClB,KAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aACrB;YACD,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,GAAG,CAAC,CAAC;YACtB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAI,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACxC,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;gBACzB,IAAI,CAAC,GAAG,CAAC;gBACT,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBAC3C,CAAC,GAAG,CAAC,GAAG,KAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;iBACxB;gBACD,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aACnB;YACD,OAAO,CAAC,GAAG,CAAC,kBAAkB,EAAE,KAAI,CAAC,IAAI,CAAC,CAAC;YAC3C,0BAA0B;YAC1B,mBAAmB;YACnB,4CAA4C;YAC5C,gCAAgC;YAEhC,6BAA6B;YAC7B,iBAAiB;YACjB,kCAAkC;YAClC,oBAAoB;YACpB,MAAM;YACN,+CAA+C;YAC/C,eAAe;YACf,4CAA4C;YAC5C,qBAAqB;YACrB,6CAA6C;YAC7C,mBAAmB;YACnB,yCAAyC;YACzC,QAAQ;YACR,sBAAsB;YACtB,IAAI;YACJ,uCAAuC;YAEvC,MAAM;QACR,CAAC,CAAC,CAAC;QACH,yBAAyB;QACzB,mCAAmC;QACnC,iEAAiE;QACjE,gDAAgD;QAChD,iFAAiF;QACjF,sCAAsC;QACtC,QAAQ;QACR,IAAI;IACN,CAAC;IApEU,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;;SAGtB,CAAC;yCAOgC,kEAAW;YAChB,sDAAM;YACP,8DAAc;OAR7B,cAAc,CAqE1B;IAAD,qBAAC;CAAA;AArE0B;;;;;;;;;;;;ACX3B,+DAA+D,+J;;;;;;;;;;;ACA/D,gMAAgM,OAAO,uiE;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA/H;AAE/B;AAEI;AACa;AAO1D;IAQE,2BACmB,WAAwB,EACxB,MAAc;QADd,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QATjC,UAAK,GAAG,IAAI,6CAAK,EAAE,CAAC;QACpB,WAAM,GAAG,IAAI,8CAAM,EAAE,CAAC;QACtB,WAAM,GAAa,EAAE,CAAC;QAGtB,gBAAW,GAAG,IAAI,0DAAY,EAAS,CAAC;QACxC,iBAAY,GAAG,IAAI,0DAAY,EAAU,CAAC;IAItC,CAAC;IAEL,oCAAQ,GAAR;IACA,CAAC;IAED,oCAAQ,GAAR,UAAS,KAAY,EAAE,IAAY;QAAnC,iBAmBC;QAlBC,KAAK,CAAC,cAAc,EAAE,CAAC;QACvB,OAAO,CAAC,GAAG,CAAC,iBAAiB,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;QAE3C,+BAA+B;QAC/B,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAChD;YACE,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAClC,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACnC,KAAI,CAAC,KAAK,GAAG,IAAI,6CAAK,EAAE,CAAC;YACzB,KAAI,CAAC,MAAM,GAAG,IAAI,8CAAM,EAAE,CAAC;YAC3B,IAAI,CAAC,KAAK,EAAE,CAAC;YACb,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;QACjC,CAAC,EACD,eAAK;YACH,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC1B,CAAC,CACF,CAAC;IACJ,CAAC;IA7BD;QADC,4DAAM,EAAE;;0DAC+B;IAN7B,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;;;SAG1B,CAAC;yCAUgC,kEAAW;YAChB,sDAAM;OAVtB,iBAAiB,CAoC7B;IAAD,wBAAC;CAAA;AApC6B;;;;;;;;;;;;ACZ9B,+DAA+D,+J;;;;;;;;;;;ACA/D,2DAA2D,gBAAgB,mIAAmI,OAAO,4lD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAtI;AACtB;AACmB;AAC5B;AAGX;AACqB;AAM1D;IAUE,4BACmB,WAAwB,EACxB,MAAc,EACd,KAAqB,EAC9B,WAAwB;QAHf,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QACd,UAAK,GAAL,KAAK,CAAgB;QAC9B,gBAAW,GAAX,WAAW,CAAa;QATlC,WAAM,GAAY,EAAE,CAAC;QACrB,WAAM,GAAa,EAAE,CAAC;QAGtB,gBAAW,GAAG,IAAI,0DAAY,EAAS,CAAC;IAMpC,CAAC;IAEL,qCAAQ,GAAR;QAAA,iBAYC;QAXD,iDAAiD;QACjD,kEAAkE;QAClE,uCAAuC;QACvC,oEAAoE;QACpE,MAAM;QACJ,IAAI,CAAC,KAAK,CAAC,QAAQ;aAChB,IAAI,CACH,0DAAG,CAAC,gBAAM,IAAI,aAAM,CAAC,GAAG,CAAC,UAAU,CAAC,EAAtB,CAAsB,CAAC,EACrC,gEAAS,CAAC,iBAAO,IAAI,YAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAlC,CAAkC,CAAC,CACzD;aACA,SAAS,CAAC,eAAK,IAAI,QAAC,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC,EAApB,CAAoB,CAAC,CAAC;IAC9C,CAAC;IAGD,qCAAQ,GAAR,UAAS,QAAQ,EAAE,IAAI;QAAvB,iBAWC;QAVC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC;YACzD,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAClC,KAAI,CAAC,KAAK,GAAG,IAAI,6CAAK,EAAE,CAAC;YACzB,IAAI,CAAC,KAAK,EAAE,CAAC;YACb,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;QACjC,CAAC,EACC,eAAK;YACH,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC1B,CAAC,CAAC,CAAC;IACP,CAAC;IAxCD;QADC,2DAAK,EAAE;kCACD,6CAAK;qDAAC;IAMb;QADC,4DAAM,EAAE;;2DAC+B;IAT7B,kBAAkB;QAL9B,+DAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;;;SAG3B,CAAC;yCAYgC,kEAAW;YAChB,sDAAM;YACP,8DAAc;YACjB,0DAAW;OAdvB,kBAAkB,CA8C9B;IAAD,yBAAC;CAAA;AA9C8B;;;;;;;;;;;;ACb/B,+DAA+D,uJ;;;;;;;;;;;ACA/D,qB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAyD;AACA;AACT;AAIU;AAO1D;IAOE,0BACmB,WAAwB,EACxB,MAAc,EACd,KAAqB;QAFrB,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QACd,UAAK,GAAL,KAAK,CAAgB;QAPxC,WAAM,GAAY,EAAE,CAAC;IAQjB,CAAC;IAEL,mCAAQ,GAAR;QAAA,iBAcC;QAbC,IAAI,CAAC,KAAK,CAAC,QAAQ;aAChB,IAAI,CACH,0DAAG,CAAC,gBAAM,IAAI,aAAM,CAAC,GAAG,CAAC,UAAU,CAAC,EAAtB,CAAsB,CAAC,EACrC,gEAAS,CAAC,iBAAO,IAAI,YAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAlC,CAAkC,CAAC,CACzD;aACA,SAAS,CAAC,eAAK;YACd,mCAAmC;YACnC,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YACnB,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,KAAI,CAAC,KAAK,CAAC,CAAC;YACpC,OAAO,CAAC,GAAG,CAAC,mBAAmB,EAAE,KAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YAEjD,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,EAAE,KAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;QACnD,CAAC,CAAC,CAAC;IACP,CAAC;IAzBD;QADC,2DAAK,EAAE;;mDACG;IAFA,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;;;SAGxB,CAAC;yCASgC,kEAAW;YAChB,sDAAM;YACP,8DAAc;OAV7B,gBAAgB,CA6B5B;IAAD,uBAAC;CAAA;AA7B4B;;;;;;;;;;;;ACb7B,+DAA+D,uJ;;;;;;;;;;;ACA/D,kMAAkM,gBAAgB,0cAA0c,UAAU,uBAAuB,UAAU,wBAAwB,YAAY,6gB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAlrB;AACA;AACT;AAIU;AAO1D;IAME,0BACmB,WAAwB,EACxB,MAAc,EACd,KAAqB;QAFrB,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QACd,UAAK,GAAL,KAAK,CAAgB;QANxC,WAAM,GAAY,EAAE,CAAC;IAOjB,CAAC;IAEL,mCAAQ,GAAR;QAAA,iBAeC;QAdC,IAAI,CAAC,KAAK,CAAC,QAAQ;aAChB,IAAI,CACH,0DAAG,CAAC,gBAAM,IAAI,aAAM,CAAC,GAAG,CAAC,UAAU,CAAC,EAAtB,CAAsB,CAAC,EACrC,gEAAS,CAAC,iBAAO,IAAI,YAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAlC,CAAkC,CAAC,CACzD;aACA,SAAS,CAAC,eAAK;YACd,mCAAmC;YACnC,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YACnB,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,KAAI,CAAC,KAAK,CAAC,CAAC;QACtC,CAAC,CAAC,CAAC;QACL,gEAAgE;QAChE,0BAA0B;QAC1B,sCAAsC;QACtC,MAAM;IACR,CAAC;IACD,mCAAQ,GAAR,UAAS,EAAU;QAAnB,iBAOC;QANC,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;QAC9B,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,sBAAY;YACjE,OAAO,CAAC,GAAG,CAAC,aAAa,EAAE,YAAY,CAAC,CAAC;YACzC,KAAI,CAAC,MAAM,GAAG,KAAI,CAAC,MAAM,CAAC,MAAM,CAAC,eAAK,IAAI,YAAK,CAAC,GAAG,KAAK,YAAY,CAAC,GAAG,EAA9B,CAA8B,CAAC,CAAC;YAC1E,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;QACjC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,yCAAc,GAAd,UAAe,EAAU,EAAE,SAAS;QAApC,iBAOC;QANC,OAAO,CAAC,GAAG,CAAC,iBAAiB,EAAE,EAAE,EAAE,SAAS,CAAC,CAAC;QAC9C,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,EAAE,EAAE,SAAS,CAAC,CAAC,SAAS,CAAC,uBAAa;YAClE,OAAO,CAAC,GAAG,CAAC,kBAAkB,EAAE,aAAa,CAAC,CAAC;YAC/C,KAAI,CAAC,MAAM,GAAG,KAAI,CAAC,MAAM,CAAC,MAAM,CAAC,iBAAO,IAAI,gBAAS,KAAK,aAAa,EAA3B,CAA2B,CAAC,CAAC;QAC3E,CAAC,CAAC,CAAC;QACH,mDAAmD;IACrD,CAAC;IA1CD;QADC,2DAAK,EAAE;;mDACG;IAFA,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;;;SAGxB,CAAC;yCAQgC,kEAAW;YAChB,sDAAM;YACP,8DAAc;OAT7B,gBAAgB,CA8C1B;IAAD,uBAAC;CAAA;AA9C0B;;;;;;;;;;;;;;;;;;;;;;;;;;ACbc;AAEO;AASlD;IAGE,qBACmB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAFlB,SAAI,GAAG,aAAa,CAAC;IAInC,CAAC;IAEJ,+BAAS,GAAT;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAU,IAAI,CAAC,IAAI,CAAC,CAAC;IAC3C,CAAC;IAED,8BAAQ,GAAR,UAAS,EAAU;QACjB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAW,IAAI,CAAC,IAAI,SAAI,EAAI,CAAC,CAAC;IACpD,CAAC;IAED,+BAAS,GAAT,UAAU,EAAU;QAClB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAW,IAAI,CAAC,IAAI,SAAI,EAAE,YAAS,CAAC,CAAC;IAC3D,CAAC;IAED,+BAAS,GAAT,UAAU,EAAU,EAAE,QAAQ;QAC5B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAW,IAAI,CAAC,IAAI,SAAI,EAAI,EAAE,QAAQ,CAAC,CAAC;IAC9D,CAAC;IAED,iCAAW,GAAX,UAAY,KAAY;QACtB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAQ,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;IACjD,CAAC;IAED,+BAAS,GAAT,UAAU,EAAU,EAAE,QAAQ;QAC5B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAW,IAAI,CAAC,IAAI,SAAI,EAAE,YAAS,EAAE,QAAQ,CAAC,CAAC;IACrE,CAAC;IAED,iCAAW,GAAX,UAAY,EAAU;QACpB,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAW,IAAI,CAAC,IAAI,SAAI,EAAI,CAAC,CAAC;IACvD,CAAC;IAED,kCAAY,GAAZ,UAAa,EAAU,EAAE,SAAS;QAChC,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAW,IAAI,CAAC,IAAI,SAAI,EAAE,SAAI,SAAW,CAAC,CAAC;IACpE,CAAC;IAtCU,WAAW;QAHvB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAKyB,+DAAU;OAJxB,WAAW,CA2CvB;IAAD,kBAAC;CAAA;AA3CuB;;;;;;;;;;;;;ACXxB;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport * as fromMovies from './movies';\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: 'movies',\n    pathMatch: 'full',\n  },\n  {\n    path: 'movies/:movie_id/refresh',\n    component: fromMovies.RefreshComponent,\n    // redirectTo: 'movies/:movie_id',\n    // pathMatch: 'full'\n  },\n  {\n    path: 'movies',\n    children: [\n      {\n        path: '',\n        component: fromMovies.MovieComponent,\n      },\n      {\n        path: 'new',\n        component: fromMovies.NewMovieComponent,\n      },\n      {\n        path: ':movie_id',\n        component: fromMovies.ReviewsComponent,\n      },\n      {\n        path: ':movie_id/review',\n        component: fromMovies.NewReviewComponent,\n      },\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {onSameUrlNavigation: 'reload'})],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<h1 class='container'>Squishy Tomatoes</h1>\\n\\n<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'beltexam';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport * as fromMovies from './movies';\nimport { ArrayPipe } from './array.pipe';\nimport { RefreshComponent } from './movies/refresh/refresh.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ...fromMovies.components,\n    ArrayPipe,\n    RefreshComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'ArrayPipe'\n})\nexport class ArrayPipe implements PipeTransform {\n\n  transform(value, args: any[] = null): any {\n    return Object.keys(value).map(key => Object.assign({ key }, value[key]));\n  }\n\n}\n","export * from './movies';\r\nexport * from './review';\r\n","export class Movie {\r\n  _id: string;\r\n  title: string;\r\n  stars: number;\r\n  name: string;\r\n  reviews: any;\r\n}\r\n","export class Review {\r\n  _id: string;\r\n  star: number;\r\n  name: string;\r\n  review: string;\r\n}\r\n","import { MovieComponent } from './movie/movie.component';\r\nimport { ReviewsComponent } from './reviews/reviews.component';\r\nimport { NewMovieComponent } from './new-movie/new-movie.component';\r\nimport { NewReviewComponent } from './new-review/new-review.component';\r\nimport { RefreshComponent } from './refresh/refresh.component';\r\n\r\nexport const components: any[] = [\r\n  MovieComponent,\r\n  ReviewsComponent,\r\n  NewMovieComponent,\r\n  NewReviewComponent,\r\n  RefreshComponent\r\n];\r\n\r\nexport * from './movie/movie.component';\r\nexport * from './new-movie/new-movie.component';\r\nexport * from './new-review/new-review.component';\r\nexport * from './reviews/reviews.component';\r\nexport * from './refresh/refresh.component';\r\n","module.exports = \".add {\\r\\n  display: inline-block;\\r\\n  margin-left: 90%;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW92aWVzL21vdmllL21vdmllLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxzQkFBc0I7RUFDdEIsaUJBQWlCO0NBQ2xCIiwiZmlsZSI6InNyYy9hcHAvbW92aWVzL21vdmllL21vdmllLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYWRkIHtcclxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgbWFyZ2luLWxlZnQ6IDkwJTtcclxufVxyXG4iXX0= */\"","module.exports = \"<section>\\n  <fieldset>\\n    <legend>Movie List</legend>\\n    <button class='add' [routerLink]='[\\\"new\\\"]'>Add a new movie</button>\\n    <table class='table table-striped'>\\n      <thead>\\n        <th>Movie Title</th>\\n        <th>Stars</th>\\n        <th>Available Actions</th>\\n      </thead>\\n\\n      <tbody>\\n        <tr *ngFor='let movie of movies; let i = index'>\\n          <td>{{ movie.title }}</td>\\n          <td>{{ star[i] / avg[i].length }} &#9733;</td>\\n          <td>\\n            <button [routerLink]='movie._id' class='btn'>Read reviews</button>\\n            <button [routerLink]='[\\\"/movies\\\", movie._id, \\\"review\\\" ]' class='btn'>Write review</button>\\n            <!-- <button class='btn btn-link' (click)='onDelete(movie._id)'>Delete Movie</button> -->\\n          </td>\\n        </tr>\\n      </tbody>\\n    </table>\\n  </fieldset>\\n</section>\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Movie } from '../../models';\n\nimport { HttpService } from '../../services/http.service';\nimport { platformBrowserDynamicTesting } from '@angular/platform-browser-dynamic/testing';\n@Component({\n  selector: 'app-movie',\n  templateUrl: './movie.component.html',\n  styleUrls: ['./movie.component.css']\n})\nexport class MovieComponent implements OnInit {\n  movies: Movie[] = [];\n  star = [];\n  avg = [];\n  s: any;\n  constructor(\n    private readonly httpService: HttpService,\n    private readonly router: Router,\n    private readonly route: ActivatedRoute\n  ) {\n\n  }\n\n  ngOnInit() {\n    this.httpService.getMovies().subscribe(movies => {\n      console.log('movies from observable', movies);\n      this.movies = movies;\n      for (let z of movies) {\n        var temp = [];\n        for (let x of z.reviews) {\n          console.log(\"xxxxxxxxxxxxx\", x.star);\n          temp.push(x.star);\n        }\n        console.log(temp);\n        this.avg.push(temp);\n      }\n      console.log(this.avg);\n      for (let i = 0; i < this.avg.length; i++) {\n        console.log(this.avg[i]);\n        var k = 0\n        for (let j = 0; j < this.avg[i].length; j++) {\n          k = k + this.avg[i][j];\n        }\n        this.star.push(k);\n      }\n      console.log(\"sfadffasdfasdfsd\", this.star);\n      // for (let z of movies) {\n      //   let temp = [];\n      //   console.log(\"zzzzzzzzzzzzzz\", z.stars);\n      //   // this.star.push(z.stars);\n\n      //   for (let x of z.stars) {\n      //     var y = 0;\n      //     console.log(\"xxxxxxxx\", x);\n      //     temp.push(x);\n      //   }\n      //   console.log(\"temptemptemptmeptemp\", temp);\n      //   var q = 0;\n      //   for (let i = 0; i < temp.length; i++) {\n      //       y = temp[i];\n      //       console.log(\"yyyyyyyyyyyyyyyyy\", y);\n      //       q = q + y;\n      //       console.log(\"qqqqqqqqqqqqqq\",q);\n      //     }\n      //   this.avg.push(q);\n      // }\n      //   console.log('asdffasd', this.avg);\n\n      // });\n    });\n    // onDelete(id: number) {\n    //   console.log('Deleting movie');\n    //   this.httpService.deleteMovie(id).subscribe(deletedMovie => {\n    //     console.log('zzzzzzzzzzz', deletedMovie);\n    //     this.movies = this.movies.filter(movie => movie._id !== deletedMovie._id);\n    //     this.router.navigateByUrl('/');\n    //   });\n    // }\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vdmllcy9uZXctbW92aWUvbmV3LW1vdmllLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<fieldset>\\n  <legend>Submit a movie and review</legend>\\n\\n  <!-- <div *ngIf='errors.length'>\\n    <ul class='alert alert-danger'>\\n      <li *ngFor='let error of errors'>{{error}}</li>\\n    </ul>\\n\\n  </div> -->\\n\\n  <form class='form-group' (submit)='onSubmit($event, form)' #form='ngForm'>\\n    <div>\\n      <label for=\\\"\\\">Movie Title :</label>\\n      <input class='form-control' type=\\\"text\\\" name=\\\"title\\\" [(ngModel)]='movie.title' #title='ngModel' required\\n        minlength=\\\"3\\\" required>\\n      <div>\\n        <div *ngIf='title?.errors?.required'>Title is required</div>\\n        <div *ngIf='title?.errors?.minlength'>Title must be at least 3 characters</div>\\n        <br>\\n      </div>\\n    </div>\\n    <div>\\n      <label for=\\\"\\\">Your name :</label>\\n      <input class='form-control' type=\\\"text\\\" name=\\\"name\\\" [(ngModel)]='movie.name' #name='ngModel' required minlength=\\\"3\\\">\\n      <div>\\n\\n        <div *ngIf='name?.errors?.required'>Name is required</div>\\n        <div *ngIf='name?.errors?.minlength'>Name must be at least 3 characters</div>\\n        <br>\\n      </div>\\n    </div>\\n    <div>\\n      <label for=\\\"\\\">Stars :</label>\\n      <select class='form-control' type=\\\"text\\\" name=\\\"star\\\" [(ngModel)]='movie.star' #star='ngModel' required>\\n        <option value=\\\"null\\\"></option>\\n        <option value=\\\"0\\\">0</option>\\n        <option value=\\\"1\\\">1</option>\\n        <option value=\\\"2\\\">2</option>\\n        <option value=\\\"3\\\">3</option>\\n        <option value=\\\"4\\\">4</option>\\n        <option value=\\\"5\\\">5</option>\\n      </select>\\n\\n      <!-- <div class=\\\"error\\\" *ngIf='star.invalid && (star.dirty || star.touched)'> -->\\n      <div>\\n        <div *ngIf='star?.errors?.required'>Star is required</div>\\n        <br>\\n      </div>\\n      <div>\\n        <label for=\\\"\\\">Your review :</label>\\n        <textarea class='form-control' name=\\\"review\\\" row='5' [(ngModel)]='movie.review' #review='ngModel' required\\n          minlength=\\\"3\\\"></textarea>\\n      </div>\\n      <div>\\n        <div *ngIf='review?.errors?.required'>Review is required</div>\\n        <br>\\n      </div>\\n\\n    </div>\\n\\n    <button class='btn'>Submit</button>\\n  </form>\\n  <button class='btn' [routerLink]='[\\\"/movies\\\"]'>Cancel</button>\\n</fieldset>\\n\"","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { Movie, Review } from '../../models';\nimport { HttpService } from '../../services/http.service';\n\n@Component({\n  selector: 'app-new-movie',\n  templateUrl: './new-movie.component.html',\n  styleUrls: ['./new-movie.component.css']\n})\nexport class NewMovieComponent implements OnInit {\n  movie = new Movie();\n  review = new Review();\n  errors: string[] = [];\n\n  @Output()\n  createMovie = new EventEmitter<Movie>();\n  createReview = new EventEmitter<Review>();\n  constructor(\n    private readonly httpService: HttpService,\n    private readonly router: Router\n  ) { }\n\n  ngOnInit() {\n  }\n\n  onSubmit(event: Event, form: NgForm) {\n    event.preventDefault();\n    console.log('submitting form', form.value);\n\n    // this.books.push(form.value);\n    this.httpService.createMovie(form.value).subscribe(\n      () => {\n        this.createMovie.emit(form.value);\n        this.createReview.emit(form.value);\n        this.movie = new Movie();\n        this.review = new Review();\n        form.reset();\n        this.router.navigateByUrl('/');\n      },\n      error => {\n        console.log(error);\n        this.errors.push(error);\n      }\n    );\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vdmllcy9uZXctcmV2aWV3L25ldy1yZXZpZXcuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<fieldset>\\n  <legend>Add a review for {{ movie?.title }}</legend>\\n\\n  <!-- <div *ngIf='errors.length'>\\n      <ul class='alert alert-danger'>\\n        <li *ngFor='let error of errors'>{{error}}</li>\\n      </ul>\\n\\n    </div> -->\\n\\n  <form class='form-group' (submit)='onSubmit(movie._id, form)' #form='ngForm'>\\n    <div>\\n      <label for=\\\"\\\">Your name :</label>\\n\\n      <input class='form-control' type=\\\"text\\\" name=\\\"name\\\" ngModel #name='ngModel' required minlength=\\\"3\\\">\\n      <div>\\n\\n        <div *ngIf='name?.errors?.required'>Name is required</div>\\n        <div *ngIf='name?.errors?.minlength'>Name must be at least 3 characters</div>\\n        <br>\\n      </div>\\n    </div>\\n    <div>\\n      <label for=\\\"\\\">Stars :</label>\\n      <select class='form-control' type=\\\"text\\\" name=\\\"star\\\" ngModel #star='ngModel' required>\\n        <option value=\\\"\\\"></option>\\n        <option value=\\\"0\\\">0</option>\\n        <option value=\\\"1\\\">1</option>\\n        <option value=\\\"2\\\">2</option>\\n        <option value=\\\"3\\\">3</option>\\n        <option value=\\\"4\\\">4</option>\\n        <option value=\\\"5\\\">5</option>\\n      </select>\\n\\n      <!-- <div class=\\\"error\\\" *ngIf='star.invalid && (star.dirty || star.touched)'> -->\\n      <div>\\n        <div *ngIf='star?.errors?.required'>Star is required</div>\\n        <br>\\n      </div>\\n      <div>\\n        <label for=\\\"\\\">Your review :</label>\\n        <textarea class='form-control' name=\\\"review\\\" row='5' ngModel #review='ngModel' required minlength=\\\"3\\\"></textarea>\\n      </div>\\n      <div>\\n        <div *ngIf='review?.errors?.required'>Review is required</div>\\n        <br>\\n      </div>\\n\\n    </div>\\n\\n    <button class='btn' *ngIf='form.valid'>Submit</button>\\n  </form>\\n  <button class='btn' [routerLink]='[\\\"/movies\\\"]'>Cancel</button>\\n</fieldset>\\n\"","import { Component, OnInit, Output, Input, EventEmitter } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { NgForm, Validators, FormGroup, FormBuilder } from '@angular/forms';\nimport { map, switchMap } from 'rxjs/operators';\n\n\nimport { Movie } from '../../models';\nimport { HttpService } from '../../services/http.service';\n@Component({\n  selector: 'app-new-review',\n  templateUrl: './new-review.component.html',\n  styleUrls: ['./new-review.component.css']\n})\nexport class NewReviewComponent implements OnInit {\n  registerForm: FormGroup;\n  @Input()\n  movie: Movie;\n\n  movies: Movie[] = [];\n  errors: string[] = [];\n\n  @Output()\n  createMovie = new EventEmitter<Movie>();\n  constructor(\n    private readonly httpService: HttpService,\n    private readonly router: Router,\n    private readonly route: ActivatedRoute,\n    private formBuilder: FormBuilder\n  ) { }\n\n  ngOnInit() {\n  //   this.registerForm = this.formBuilder.group({\n  //     name: ['', [Validators.required, Validators.minLength(3)]],\n  //     star: ['', Validators.required],\n  //     review: ['', [Validators.required, Validators.minLength(3)]],\n  // });\n    this.route.paramMap\n      .pipe(\n        map(params => params.get('movie_id')),\n        switchMap(movieId => this.httpService.getMovie(movieId))\n      )\n      .subscribe(movie => (this.movie = movie));\n  }\n\n\n  onSubmit(movie_id, form) {\n    this.httpService.addReview(movie_id, form.value).subscribe(() => {\n      this.createMovie.emit(form.value);\n      this.movie = new Movie();\n      form.reset();\n      this.router.navigateByUrl('/');\n    },\n      error => {\n        console.log(error);\n        this.errors.push(error);\n      });\n  }\n\n\n}\n\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vdmllcy9yZWZyZXNoL3JlZnJlc2guY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { map, switchMap } from 'rxjs/operators';\n\nimport { ArrayPipe } from '../../array.pipe';\nimport { Movie } from '../../models';\nimport { HttpService } from '../../services/http.service';\n\n@Component({\n  selector: 'app-refresh',\n  templateUrl: './refresh.component.html',\n  styleUrls: ['./refresh.component.css']\n})\nexport class RefreshComponent implements OnInit {\n  @Input()\n  movie: any;\n  movies: Movie[] = [];\n  review: any;\n  selectedMovie;\n\n  constructor(\n    private readonly httpService: HttpService,\n    private readonly router: Router,\n    private readonly route: ActivatedRoute\n  ) { }\n\n  ngOnInit() {\n    this.route.paramMap\n      .pipe(\n        map(params => params.get('movie_id')),\n        switchMap(movieId => this.httpService.getMovie(movieId))\n      )\n      .subscribe(movie => {\n        // console.log(movie.reviews.name);\n        this.movie = movie;\n        console.log('movie = ', this.movie);\n        console.log(\"ididididididididi\", this.movie._id);\n\n        this.router.navigate(['movies', this.movie._id]);\n      });\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vdmllcy9yZXZpZXdzL3Jldmlld3MuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<section>\\n  <a class='btn' routerLink='/'>Home</a>\\n  <button class='btn btn-link' (click)='onDelete(movie._id)'>Delete Movie</button>\\n  <fieldset>\\n    <legend>Review For {{ movie?.title }}</legend>\\n    <!-- <button class='add' [routerLink]='[\\\"new\\\"]'>Add a new movie</button> -->\\n    <table class='table table-striped'>\\n      <thead>\\n        <th>Reviewer</th>\\n        <th>Stars</th>\\n        <th>Reviews</th>\\n        <th>Actions</th>\\n      </thead>\\n\\n      <tbody>\\n        <!-- <tr *ngFor='let name of movie?.name let star of movie?.star let review of movie?.review'> -->\\n        <tr *ngFor='let m of movie?.reviews'>\\n          <td>{{ m.name }}</td>\\n          <td>{{ m.star }} </td>\\n          <td>{{ m.review }} </td>\\n          <td>\\n            <button class='btn btn-warning' [routerLink]=\\\"['refresh']\\\" (click)='onReviewDelete(movie._id, m._id)'>Delete\\n              Review</button>\\n          </td>\\n          <!-- <td (click)='onEvent($event)'>\\n            <button [routerLink]='movie._id' class='btn'>Read reviews</button>\\n            <button [routerLink]='[\\\"/movies\\\", movie._id, \\\"review\\\" ]' class='btn'>Write review</button>\\n          </td> -->\\n        </tr>\\n      </tbody>\\n    </table>\\n  </fieldset>\\n</section>\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { map, switchMap } from 'rxjs/operators';\n\nimport { ArrayPipe } from '../../array.pipe';\nimport { Movie } from '../../models';\nimport { HttpService } from '../../services/http.service';\n\n@Component({\n  selector: 'app-reviews',\n  templateUrl: './reviews.component.html',\n  styleUrls: ['./reviews.component.css']\n})\nexport class ReviewsComponent implements OnInit {\n  @Input()\n  movie: any;\n  movies: Movie[] = [];\n  review: any;\n  selectedMovie;\n  constructor(\n    private readonly httpService: HttpService,\n    private readonly router: Router,\n    private readonly route: ActivatedRoute\n  ) { }\n\n  ngOnInit() {\n    this.route.paramMap\n      .pipe(\n        map(params => params.get('movie_id')),\n        switchMap(movieId => this.httpService.getMovie(movieId))\n      )\n      .subscribe(movie => {\n        // console.log(movie.reviews.name);\n        this.movie = movie;\n        console.log('movie = ', this.movie);\n      });\n    // this.httpService.getReview(this.review).subscribe(review => {\n    //   this.review = review;\n    //   console.log('review = ', review);\n    // });\n  }\n  onDelete(id: number) {\n    console.log('Deleting movie');\n    this.httpService.deleteMovie(this.movie._id).subscribe(deletedMovie => {\n      console.log('zzzzzzzzzzz', deletedMovie);\n      this.movies = this.movies.filter(movie => movie._id !== deletedMovie._id);\n      this.router.navigateByUrl('/');\n    });\n  }\n\n  onReviewDelete(id: number, review_id) {\n    console.log('Deleting review', id, review_id);\n    this.httpService.deleteReview(id, review_id).subscribe(deletedReview => {\n      console.log('afsdfasdfasdfads', deletedReview);\n      this.movies = this.movies.filter(reviews => review_id !== deletedReview);\n    });\n    // this.router.navigate(['movies', id, 'refresh']);\n  }\n\n  }\n\n","import { Injectable } from '@angular/core';\nimport { Observable, of, Subject } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n\n\n\nimport { Movie } from '../models';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class HttpService {\n\n  private readonly base = '/api/movies';\n  constructor(\n    private readonly http: HttpClient,\n\n  ) {}\n\n  getMovies(): Observable<Movie[]> {\n    return this.http.get<Movie[]>(this.base);\n  }\n\n  getMovie(id: string): Observable<Movie> {\n    return this.http.get<Movie>(`${this.base}/${id}`);\n  }\n\n  getReview(id: string): Observable<Movie> {\n    return this.http.get<Movie>(`${this.base}/${id}/review`);\n  }\n\n  editMovie(id: number, callback): Observable<Movie> {\n    return this.http.put<Movie>(`${this.base}/${id}`, callback);\n  }\n\n  createMovie(movie: Movie): Observable<Movie> {\n    return this.http.post<Movie>(this.base, movie);\n  }\n\n  addReview(id: number, callback): Observable<Movie> {\n    return this.http.put<Movie>(`${this.base}/${id}/review`, callback);\n  }\n\n  deleteMovie(id: number): Observable<Movie> {\n    return this.http.delete<Movie>(`${this.base}/${id}`);\n  }\n\n  deleteReview(id: number, review_id): Observable<Movie> {\n    return this.http.delete<Movie>(`${this.base}/${id}/${review_id}`);\n  }\n\n  // likePet(id: number, callback): Observable<Movie> {\n  //   return this.http.put<Movie>(`${this.base}/${id}/like`, callback);\n  // }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}